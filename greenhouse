
int motors = 9;  
int gaisma = 8;

void setup()
{
Serial.begin(9600);

pinMode(gaisma, OUTPUT);
pinMode(motors, OUTPUT);

  randomSeed( analogRead(0) );
}

//zemakas vertibas nokopetas no temp sensora lapas
float R1 = 10000; //value of R1 on board
float logR2, R2, T;
float c1 = 0.001129148, c2 = 0.000234125, c3 = 0.0000000876741; //steinh

void loop()
{

//visu sensoru nolasisana
int pot = analogRead(A0);
int mitrums = analogRead(A3);
int temp_sensors = analogRead(A2);

//temp sensora parveidojums panets no sensora apraksta lapas
// R2 = R1 * (1023.0 / (float)temp_sensors - 1.0; //calc resistance
R2 = R1*temp_sensors/(1023-temp_sensors);
logR2 = log(R2);
T = (1.0 / (c1 + c2*logR2 + c3*logR2*logR2*logR2)); //temp in Kelvin
T = T - 273.15; //convert Kelvin to Celcius
// T = (T * 9.0)/ 5.0 + 32.0; //convert Celcius to Farenheit

// Visas nolasitas informacijas izvads
Serial.print("Temp.:\t");
Serial.print(T);
Serial.print("\tMitr.:\t"):
Serial.println(mitrums);

//Laistisanas motora darba laika noteiksana, define ka ir 10 sek, pectam maina pec nepiecisamibas ja vajag 
int laistisanas_laiks = 10; //10sek.
laistisanas_laiks = laistisanas_laiks + (pot / 100);

if (T < 18) {
  laistisanas_laiks = laistisanas_laiks / 2;
}

//mitruma parbaude, laistisanas morota
if (mitrums < 175) { //apmeram 20%
  Serial.println(
    "Laistisanas Motors ON, uz: "
    + String(laistisanas_laiks)
    + "sek."
);

  digitalWrite(motors, HIGH);
  delay(laistisanas_laiks * 1000);
  digitalWrite(motors, LOW);
}


if (Serial.available() > 0) {
  char komanda = Serial.read();

  switch (komanda) {
    case '1':
      digitalWrite(gaisma, HIGH);
      Serial.print("Ieslegts apgaismojums");
      komanda = 0;
      break;
    case '0':
      digitalWrite(gaisma, LOW);
      Serial.print("Izslegts apgaismojums");
      komanda = 0;
      break;
    default:
      break;
  }
}

delay(500); //neliela pauze starp nolasisanam

}
